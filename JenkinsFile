pipeline {
    agent any

    environment {
        VIRTUAL_ENV = '.venv'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from Git repository
                git branch: 'main', url: 'https://github.com/rohitmenon30/testAuto.git'
            }
        }

        stage('Setup Python Environment') {
            steps {
                script {
                    // Check if python3 is installed
                    sh 'python3 --version || echo "Python3 is not installed on the agent!"'
                    
                    // Create a virtual environment and install dependencies
                    sh 'python3 -m venv ${VIRTUAL_ENV}'
                    sh '${VIRTUAL_ENV}/bin/pip install --upgrade pip'
                    sh '${VIRTUAL_ENV}/bin/pip install -r requirements.txt || echo "Ensure requirements.txt exists and is correct."'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run pytest and generate a JUnit-compatible report
                    sh '${VIRTUAL_ENV}/bin/pytest --maxfail=5 --disable-warnings --junitxml=report.xml || echo "Tests failed."'
                }
            }
        }

        stage('Archive Test Results') {
            steps {
                // Archive the test results generated by pytest in JUnit format
                junit 'report.xml'
            }
        }

        stage('Clean Up') {
            steps {
                script {
                    // Clean up by removing the virtual environment
                    sh 'rm -rf ${VIRTUAL_ENV}'
                }
            }
        }
    }

    post {
        always {
            // Clean the workspace on completion
            cleanWs()
        }

        success {
            echo 'Tests ran successfully!'
